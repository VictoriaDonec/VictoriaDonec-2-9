import numpy as np
import matplotlib.pyplot as plt
from scipy.interpolate import lagrange

x = np.array([-3., -2., 1., 3.], dtype=float)
y = np.array([-4., 19., -8., 14.], dtype=float)
x_t_values = [-1.5, 0.5, 1.5, 2]

def lagrange_int(x, y, x_t):
    n = len(x)
    p = np.zeros(n)

    for i in range(n):
        p_i = 1
        for j in range(n):
            if i != j:
                p_i *= (x_t - x[j]) / (x[i] - x[j])
        p[i] = p_i

    return np.dot(y, p)

for x_t in x_t_values:
    f_interp = lagrange_int(x, y, x_t)
    print("Значення функції у точці x_t =", x_t, ":", f_interp.round(4))

x_new = np.linspace(np.min(x), np.max(x), 100)
y_new = [lagrange_int(x, y, i) for i in x_new]

plt.figure(figsize=(7,5))
plt.plot(x, y, 'o', x_new, y_new)
plt.title('Lagrange Polynomial')
plt.grid(True)
plt.show()
f = lagrange(x, y)
fig = plt.figure(figsize = (7,5))
plt.plot(x_new, f(x_new), 'b', x, y, 'ro')
plt.title('Lagrange Polynomial_2')
plt.grid()
plt.xlabel('x')
plt.ylabel('y')
plt.show()
