#1
import numpy as np
A = np.array([[1, 2], [4, -1]])
B = np.array([[2, -3], [-4, 1]])
AB = np.dot(A, B)
BA = np.dot(B, A)
C = AB - BA
print("Матриця C:")
print(C)
#2
import numpy as np
matrix = np.array([[-1, 0, 2],[0, 1, 0],[1, 2, -1]])
result = np.dot(matrix, matrix)
print("Матриця піднесена до квадрату:")
print(result)

#3
import numpy as np
matrix = np.array([[3, 0, 7],[-4, 2, 3],[-1, 1, 2]])
v = np.array([1, 2, 4])
result = np.dot(matrix, v)
print("Результат добутку:")
print(result)

#4
import numpy as np
matrix = np.array([[1, 5, -5],[4, 0, 3],[2, -10, 3]])
d = np.linalg.det(matrix)
print("Визначник матриці:")
print(d)

#5
import numpy as np
matrix = np.array([[2, 3, 4, 1],[1, 2, 3, 4],[3, 4, 1, 2],[4, 1, 2, 3]])
d = np.linalg.det(matrix)
print("Визначник матриці:")
print(d)

#6
import numpy as np
matrix = np.array([[1, 1, 1, 1],[1, 1, -1, -1],[1, -1, 1, -1],[1, -1, -1, 1]])
def minor(matrix, i, j):
    sub_matrix = np.delete(np.delete(matrix, i, axis=0), j, axis=1)
    return np.linalg.det(sub_matrix)
adj_m = np.array([[(-1) ** (i + j) * minor(matrix, i, j) for j in range(4)] for i in range(4)])
d = np.linalg.det(matrix)
inverse_m = adj_m / d
print("Обернена матриця:")
print(inverse_m)

#7
import numpy as np
matrix = np.array([[1, 2, 3, 4],[3, -1, 2, 5],[1, 2, 3, 4],[1, 3, 4, 5]])
rank = np.linalg.matrix_rank(matrix)
print("Ранг матриці:")
print(rank)

#8
import numpy as np
coefficients = np.array([[3, -5, 3],[0, 2, 1], [2, 7, -1]])
constants = np.array([1, 4, 8])
# Розв'язання системи за допомогою методу Крамера
det_A = np.linalg.det(coefficients) 
# Якщо визначник матриці коефіцієнтів не дорівнює 0, можна використовувати метод Крамера
if det_A != 0:
    solutions = []
    for i in range(len(coefficients)):
        temp_matrix = np.copy(coefficients)
        temp_matrix[:, i] = constants  
        det_temp = np.linalg.det(temp_matrix) 
        solutions.append(det_temp / det_A) 
    print("Розв'язок за методом Крамера:")
    print(f"x = {solutions[0]}, y = {solutions[1]}, z = {solutions[2]}")
    check_solution = np.linalg.solve(coefficients, constants)
    print("Перевірка за допомогою solve():")
    print(f"x = {check_solution[0]}, y = {check_solution[1]}, z = {check_solution[2]}")
else:
    print("Система лінійних рівнянь не має єдиного розв'язку (визначник матриці коефіцієнтів = 0).")

#Завдання 2
import numpy as np
N = 3  
M = 4 
matrix = np.random.randint(1, 100, size=(N, M))
print("Матриця A:")
print(matrix)
total_sum = np.sum(matrix)
column_sums = np.sum(matrix, axis=0)
print("Сума всіх елементів матриці: ", total_sum)
print("Сума елементів кожного стовпця: ", column_sums)


